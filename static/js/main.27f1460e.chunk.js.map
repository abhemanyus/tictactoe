{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","board","renderSquare","React","Component","Game","state","history","Array","fill","step","turn","bind","jumpTo","move","setState","prevState","slice","sqrNum","length","calculateWinner","concat","status","winner","moves","map","mv","forEach","item","index","desc","Math","floor","squares","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27f1460e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nconst X = 'X';\nconst O = 'O';\n\nfunction Square(props) {\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return <Square value={this.props.board[i]} onClick={ () => this.props.onClick(i) }/>;\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [ { board: Array(9).fill(null) } ],\n      step: 0,\n      turn: true\n    };\n    this.onClick = this.onClick.bind(this);\n    this.jumpTo = this.jumpTo.bind(this);\n  }\n\n  jumpTo(move) {\n    this.setState( prevState => ({\n      step: move,\n      turn: (move % 2) === 0,\n      history: prevState.history.slice(0, move+1)\n    }));\n  }\n\n  onClick(sqrNum) {\n    const history = this.state.history.slice(0, this.state.step + 1);\n    const board = history[history.length - 1].board.slice();\n    if (board[sqrNum] || calculateWinner(board)) {\n      return;\n    }\n    board[sqrNum] = this.state.turn ? X : O;\n    this.setState( prevState => ( {\n      history: prevState.history.concat([{board}]),\n      step: history.length,\n      turn: (history.length % 2) === 0\n    } ) );\n  }\n\n  render() {\n    const board = this.state.history[this.state.step].board;\n    const winner = calculateWinner(board);\n    let status;\n    \n    if(winner) {\n      status = `The Winner Is : ${winner}`;\n    }\n    else {\n      status = `Next move: ${this.state.turn ? X: O}`;\n    }\n    const moves = this.state.history.map((step, move) => {\n      let mv = 0;\n      if(move) {\n        const prevStep = this.state.history[move-1];\n        prevStep.board.forEach((item, index) => {\n          if(item !== step.board[index]) {\n            mv = index;\n            return;\n          }\n        });\n      } \n      const desc = move ? `${(move % 2 === 0) ? O : X} at (${(mv % 3) + 1},${Math.floor(mv/3) + 1})` : \"Go to game start\";\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            onClick={this.onClick} \n            board={board}\n            turn={this.state.turn}/>\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"sourceRoot":""}